AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: >
  Arquitetura baseada em microsservicos para catalogo de veiculos, utilizando AWS Lambda, Amazon SQS e DynamoDB

Globals:
  Function:
    Timeout: 100

    Tracing: Active
    LoggingConfig:
      LogFormat: JSON
  Api:
    TracingEnabled: true
Resources:
  CatalogApi:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./src/fiap-catalog-service/
      Handler: fiap-catalog-service
      Runtime: dotnet8
      MemorySize: 1024
      Environment:
        Variables:
          VEHICLES_TABLE: !Ref VehiclesTable
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref VehiclesTable
        - Statement:
            - Effect: Allow
              Action:
                - sqs:SendMessage
              Resource: !GetAtt VehicleEventsQueue.Arn
      Events:
        ProxyResource:
          Type: HttpApi
          Properties:
            PayloadFormatVersion: "2.0"
            Path: /{proxy+}
            Method: ANY
        RootResource:
          PayloadFormatVersion: "2.0"
          Type: HttpApi
          Properties:
            Path: /
            Method: ANY

  VehiclesTable:
    Type: AWS::Serverless::SimpleTable
    Properties:
      TableName: Vehicles
      PrimaryKey:
        Name: Id
        Type: String
      ProvisionedThroughput:
        ReadCapacityUnits: 2
        WriteCapacityUnits: 2

  VehicleEventsQueue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: VehicleEventsQueue
      VisibilityTimeout: 30
      MessageRetentionPeriod: 86400
      ReceiveMessageWaitTimeSeconds: 10

  ApplicationResourceGroup:
    Type: AWS::ResourceGroups::Group
    Properties:
      Name:
        Fn::Sub: ApplicationInsights-SAM-${AWS::StackName}
      ResourceQuery:
        Type: CLOUDFORMATION_STACK_1_0
  ApplicationInsightsMonitoring:
    Type: AWS::ApplicationInsights::Application
    Properties:
      ResourceGroupName:
        Ref: ApplicationResourceGroup
      AutoConfigurationEnabled: "true"
Outputs:
  WebEndpoint:
    Description: API Gateway endpoint URL
    Value: !Sub "https://${ServerlessHttpApi}.execute-api.${AWS::Region}.amazonaws.com/"

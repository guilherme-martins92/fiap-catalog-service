name: .NET CI/CD Pipeline

on:
  push:
    branches:
      - main
      - develop

jobs:
  Build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout código
        uses: actions/checkout@v3

      - name: Configurar .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x'

      - name: Restaurar dependências
        run: dotnet restore src/fiap-catalog-service.sln

      - name: Build da aplicação
        run: dotnet build src/fiap-catalog-service.sln --configuration Release

  Tests:
    runs-on: ubuntu-latest
    needs: Build
    steps:
      - name: Checkout código
        uses: actions/checkout@v3

      - name: Configurar .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x'

      - name: Restaurar dependências
        run: dotnet restore src/fiap-catalog-service-tests/fiap-catalog-service-tests.csproj

      - name: Executar testes com cobertura
        run: dotnet test src/fiap-catalog-service-tests/fiap-catalog-service-tests.csproj --configuration Release --no-restore --collect:"XPlat Code Coverage"

      - name: Mover relatório de cobertura
        run: mv src/fiap-catalog-service-tests/TestResults/**/*.xml coverage.xml

  SonarCloud:
    runs-on: ubuntu-latest
    needs: Tests
    steps:
      - name: Checkout código
        uses: actions/checkout@v3

      - name: Configurar Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '11'

      - name: Instalar SonarScanner
        run: |
          dotnet tool install --global dotnet-sonarscanner
          echo "$HOME/.dotnet/tools" >> $GITHUB_PATH

      - name: Verificar SonarScanner
        run: dotnet sonarscanner --version

      - name: Executar análise SonarCloud
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          dotnet sonarscanner begin /k:"guilherme-martins92_fiap-catalog-service" /o:"guilherme-martins92" /d:sonar.token="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io" /d:sonar.cs.opencover.reportsPaths="coverage.xml"
          dotnet build
          dotnet sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"

  Deploy:
    if: github.ref == 'refs/heads/main'
    needs: SonarCloud
    runs-on: ubuntu-latest
    steps:
      - name: Checkout código
        uses: actions/checkout@v3

      - name: Instalar AWS SAM CLI
        run: pip install aws-sam-cli

      - name: Configurar credenciais AWS
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Build SAM Application
        run: sam build

      - name: Deploy para AWS
        run: sam deploy --no-confirm-changeset --no-fail-on-empty-changeset --stack-name fiap-catalog-service

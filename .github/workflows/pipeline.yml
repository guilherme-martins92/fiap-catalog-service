name: CI/CD Pipeline

on:
  push:
    branches:
      - develop
      - main
  pull_request:
    branches:
      - develop
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout do código
        uses: actions/checkout@v3

      - name: Instalar dependências
        run: dotnet restore src/fiap-catalog-service.sln
        
      - name: Compilar aplicação
        run: dotnet build src/fiap-catalog-service.sln --configuration Release

  tests:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout do código
        uses: actions/checkout@v3

      - name: Executar testes
        run: dotnet test src/fiap-catalog-service-tests/fiap-catalog-service-tests.csproj --configuration Release

  sonarQube:
    needs: tests
    name: SonarQube Analysis
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '8.0.x'  # ou a versão do seu projeto

    - name: Install SonarScanner for .NET
      run: dotnet tool install --global dotnet-sonarscanner

    - name: Add SonarScanner to PATH
      run: echo "$HOME/.dotnet/tools" >> $GITHUB_PATH

    - name: Begin SonarCloud analysis
      run: |
        dotnet sonarscanner begin `
          /k:"guilherme-martins92_fiap-catalog-service" `
          /o:"guilherme-martins92" `
          /d:sonar.login="${{ secrets.SONAR_TOKEN }}" `
          /d:sonar.host.url="https://sonarcloud.io"
      shell: pwsh

    - name: Build Project
      run: dotnet build src/fiap-catalog-service.sln --no-incremental

    - name: Test Project
      run: dotnet test src/fiap-catalog-service-tests/fiap-catalog-service-tests.csproj --no-build

    - name: End SonarQube Analysis
      run: |
        dotnet sonarscanner end `
          /d:sonar.login="${{ secrets.SONAR_TOKEN }}"
      shell: pwsh

  deploy:
    if: github.ref == 'refs/heads/main'
    needs: sonarQube
    runs-on: ubuntu-latest
    steps:
      - name: Checkout código
        uses: actions/checkout@v3

      - name: Instalar AWS SAM CLI
        run: |
          pip install aws-sam-cli

      - name: Configurar credenciais AWS
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Build SAM Application
        run: sam build

      - name: Deploy para AWS
        run: sam deploy --no-confirm-changeset --no-fail-on-empty-changeset --stack-name fiap-catalog-service
